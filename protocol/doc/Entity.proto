package com.randioo.mahjong_public_server.protocol;

message RoleData{
	optional int32 roleId = 1;
	optional string roomId = 2;
	optional int32 point = 3;
	optional int32 sex = 4;
	optional int32 serverTime = 5;
	optional string name = 6;
	optional string headImageUrl = 7;
	optional bytes gameOverSC = 8;
	optional int32 randiooCoin = 9;
}

message GameConfigData{
	optional int32 raceType = 1; 
	optional int32 roundCount = 2;//局数
	optional int32 baseScore = 3; //底分
	optional int32 huaScore = 4; // 花底分
	optional int32 gangScore = 5;//杠的分数
	optional bool baidaZhuaHu = 6;//白搭在手是否可以抓胡
	optional bool baida4win=7;//四红中(白搭)获胜
	optional int32 maxScore = 8; // 封顶
	optional bool huangFan = 9;// 荒番
	optional int32 zhamaScore = 10; //扎马分数
	repeated int32 zhamaValue = 11;//扎马的值
	optional int32 zhamaCount = 12; //扎马数量
	optional int32 flyScore = 13;//苍蝇分数
	repeated int32 flyValue = 14;//苍蝇值
	optional int32 flyCount = 15;//苍蝇的数量
	optional GameOverMethod gameOverMethod = 16[default=GAME_OVER_ROUND];//游戏结束方式
	optional string endTime = 17; //结束时间
	optional int32 cardNum = 18; // 房卡数量
	optional int32 maxCount = 19 [default=4];//默认值为4
	optional int32 roomCard = 20;//房卡
	optional string roomId = 21;//房间id
	optional bool zhuaHu = 22;//能否抓胡
	optional int32 moFlowerCount = 23; //几个花时才能自摸
	optional int32 zhuaFlowerCount = 24;//几个花时才能抓胡

}

/**游戏结束的方式*/
enum GameOverMethod{
	GAME_OVER_TIME=1;
	GAME_OVER_ROUND=2;
}
message PaiNum{
	optional int32 seat = 1;
	optional int32 num = 3;
}

message ScoreData{
	optional int32 seat = 1;
	optional int32 score = 2;
}

message Record{
	optional int32 seat = 1;
	repeated int32 pai = 2;
}

enum GameType{
	GAME_TYPE_MATCH = 1;
	GAME_TYPE_FRIEND = 2;
}

message GameRoleData{
	optional string gameRoleId = 1;
	optional string name = 2;
	optional int32 seat = 3;
	optional bool ready = 4;
	optional string headImgUrl = 5;
	optional int32 money = 6;
	optional int32 point = 7;
	optional int32 sex = 8;
	optional bool online = 9;	
	optional string platformRoleId = 10;
	optional int32 flower = 11;//花的数量
}

enum GameState{
	GAME_STATE_PREPARE = 1;
	GAME_START_START = 2;
	GAME_START_END = 3;
}

message CallCardListData{
	optional int32 callId = 1;
	optional CardListData cardListData = 2;
}

message CardListData{
	optional CardListType cardListType = 1;
	optional int32 card = 2;
	optional int32 targetSeat = 3;
	optional int32 targetCard = 4;
}

enum CardListType{
	CARD_LIST_TYPE_CHI = 1;
	CARD_LIST_TYPE_PENG = 2;
	CARD_LIST_TYPE_GANG_LIGHT = 3;
	CARD_LIST_TYPE_GANG_DARK = 4;
	CARD_LIST_TYPE_GANG_ADD = 5;
}

message CallHuData{
	optional int32 callId = 1;
	optional RoundCardsData huData = 2;
}
enum HuType{
	//共有
	GANG_KAI = 1;// 杠开
	MEN_QING = 2;//门清
	DA_DIAO_CHE = 3;//大吊车
	//百搭麻将
	SI_BAI_DA = 4;//四百搭
	WU_BAI_DA = 5;//无百搭
	PAO_DAI_DA = 6;//跑百搭
	//敲麻
	QING_PENG = 7; //清碰
	HUN_PENG = 8;//混碰
	QING_YI_SE = 9;//清一色
	PENG_PENG_HU = 10;//碰碰胡
	HUN_YI_SE = 11;//混一色
	WU_HUA_GUO = 12;//无花果
	HAI_DI_LAO = 13;//海底捞
}
message RoleRoundOverInfoData{
	optional GameRoleData gameRoleData = 1;
	optional RoundCardsData roundCardsData = 2;
	optional OverMethod overMethod = 3;
	optional int32 roundScore = 4;

	optional int32 baseScore = 5;//底分
	optional int32 flowerCount = 6;  //赢家花的数量	
	repeated HuType huTypeList = 7;//牌型

	optional int32 mingGangScorePlus = 8;//明杠
	optional int32 mingGangCountPlus = 9;
	optional int32 mingGangScoreMinus = 10;
	optional int32 mingGangCountMinus = 11;

	optional int32 anGangScorePlus = 12;//暗杠
	optional int32 anGangCountPlus = 13;
	optional int32 anGangScoreMinus = 14;
	optional int32 anGangCountMinus = 15;

	optional int32 buGangScorePlus = 16;//补杠
	optional int32 buGangCountPlus = 17;
	optional int32 buGangScoreMinus = 18;
	optional int32 buGangCountMinus = 19;

	optional int32 ziMoScore = 20;//自摸
	optional int32 zhuaHuScore = 21;//抓胡
	optional int32 qiangGangScore = 22;//抢杠

	optional int32 chuChongScore = 23;//出铳
	optional int32 gangChongScore = 24;//杠铳

	optional int32 zhaMaScore = 25;//扎马分数
	optional int32 cangYingScore = 26;//苍蝇分数
}

enum OverMethod{
	LOSS = 0;//输
	CHU_CHONG = 1;//出铳
	GANG_CHONG = 2;//杠铳
	MO_HU = 3;//自摸
	ZHUA_HU = 4;//抓胡
	QIANG_GANG = 5;//抢杠
}

message RoleGameOverInfoData{
	optional GameRoleData gameRoleData = 1;
	optional int32 huCount = 2;
	optional int32 moHuCount = 3;
	optional int32 zhuaHuCount = 4;
	optional int32 dianChongCount = 5;
	optional int32 gameScore = 6;
	optional int32 mingGangScore = 7;
	optional int32 mingGangCount = 8;
	optional int32 anGangScore = 9;
	optional int32 anGangCount = 10;
}

message RoundCardsData{	
	optional int32 huCard = 1;
	repeated int32 handCards = 2;	
	optional int32 touchCard = 3;
	optional int32 targetSeat = 4;
	repeated CardListData cardListData = 5;
	repeated int32 flower = 6;
}

message RecommandPai{
	repeated int32 pai = 1; 
}

message GameData{
	optional string roomId = 1;
	repeated GameRoleData gameRoleData = 2;
}

message AudienceData{
	optional string name = 1;
	optional int32 score = 2;
}

enum FightVoteApplyExit{
	VOTE_IDLE = 0;
	VOTE_AGREE = 1;
	VOTE_REJECT = 2;
}

message RoundVideoData{	
	repeated bytes sc = 1;
}
message GameVideoData{	
	repeated RoundVideoData roundVideoData = 1;
}

message FightStartRoleData{
	repeated int32 pai = 1;
	optional int32 seat = 2;
}

message ClientCard{
	repeated int32 cards = 1;
}

